name: CI - Terraform Configs

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  TF_VERSION: "1.5.0"

jobs:
  validate-configs:
    name: Validate Configurations
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout configs repository
        uses: actions/checkout@v4
        with:
          path: configs

      - name: Checkout modules repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/poc-okta-terraform-modules
          path: modules
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Validate app1 configuration
        run: |
          cd configs
          chmod +x scripts/generate-terraform.sh
          ./scripts/generate-terraform.sh apps/app1 app1
          
          cd generated/app1
          terraform init
          terraform validate
        env:
          MODULES_REPO_PATH: "../modules"

  test-scripts:
    name: Test Scripts
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test generate-terraform.sh
        run: |
          chmod +x scripts/generate-terraform.sh
          # Test script with invalid parameters (should exit with error)
          if ./scripts/generate-terraform.sh; then
            echo "Script should have failed with missing parameters"
            exit 1
          fi

      - name: Test deploy-app.sh
        run: |
          chmod +x scripts/deploy-app.sh
          # Test script with invalid parameters (should exit with error)
          if ./scripts/deploy-app.sh; then
            echo "Script should have failed with missing parameters"
            exit 1
          fi

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif' 